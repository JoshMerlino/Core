/*
		####################	###########################	##############		#######################
		####################	###########################	################	#######################
		#######			###########################	#######	   ######	#######################
		#######			#######		    #######	#######	    ######	#######
		#######			#######		    #######	#######	   ######	#######	
		#######			#######	  	    #######	################	###################
		#######			#######		    #######	###############		###################
		#######			#######		    #######	################	###################
		#######			#######		    #######	#######   #######	#######			     	########  #######
		#######			#######		    #######	#######	   #######	#######				    #     #
		####################	###########################	#######	    #######	#######################		    #     ####### 
		####################	###########################	#######	     #######	#######################		#   #           #	       
		####################	###########################	#######	      #######	#######################   #	#####     #######
		
		Any Ideas? email me: teh.picix@gmail.com
		Anything Broken? email me: teh.picix@gmail.com
		Contact Me: teh.picix@gmail.com
*/
var currentTime;
var newTime;
var valsP;
var rateMenu;
var btnPos;
var updateMod;
var easterMenu;
var debugCmd;
var zoomBarProgress;
var plugins;
var dnb;
var gridMenu;
var messageMenu;
var debugTools;
var jumpMenu;
var warpsStable;
var errMenu;
var GUI;
var menu;
var spellsMenu;
var optionsMenu;
var infoMenu;
var settingsMenu;
var cycle;
var permCheck;
var in_level;
var tooManyItemsMenu;
var warpsMenu;
var speedValue;
var screenPos_DragPos_2;

var checkForUpdate = false;
var updateWindow = false;
var currentVersion = "1.0";
var screenPos_Background_2;
var screenPos_SetBtn_2;
var screenPos_CloseBtn_2;
var radioColor = 0x40FFAA;
var chat = clientMessage;

var CORE_LOGO = "";
var CORE_BTN = "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";
var CORE_SORCE = "";
var STAR_SILVER = "iVBORw0KGgoAAAANSUhEUgAAAKAAAACgCAYAAACLz2ctAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAASgSURBVHhe7dzhUtswEEXh0OciTw/vRaMmKcbYjmxLunel880wTac/SuSTXQcY3i6Xy9ftA5AgwBM+Pj4ejy6X6/X6eIQ9/jz+xE7T+JL535GHACFFgJAiwAPW1i1reD8ChBQBQooAd3q1ZlnD+xAgpAgQUgS4Q+56ZQ3nI0BIESCkCDDT3rXKGs5DgJAiQEgRYAbWaT0EWBHhvkaAkCLAF5hidRFgZQS8jQAhRYAbmF71EWADhLyOACFFgCuYWm0QYCMEvYwAIUWAC5hW7RBgQ4T9GwFCigBnmFJtESCkCLAxJuxPBDhBHO0RIKQIUIBJ+40AH4hCgwAhRYAiTNw7ArwhBh0ChBQBCjF5CZAIxJiAkCJASA0doMP6Hf0WgAkIKQKE1LABOq2+kdcwExBSBAipIQN0XHmjrmEmIKQIEFIEaGTENTxcgCN/ycMRExBSb7ePr/vDeJhmd9fr9fEonmIBEsNYSkX/P0ACQkvPgP/dAxIfWns2x5sQSBEgpP4FGPldFGL6cQ+YECFamba2+GUY3pSghqUht3gPyDREaWtNrb4JIUKUstVS1ndCWMk4ImeIZX0ZhmmIvXKbyQowIULk2tPKoR9GYCVjzd5BdfinYYgQU0c3ZPYKnmMl4+lMC4cDTIgQZxs4vILnWMljKTV8Tk3AKabhOEpe62IBJkTYv9LXuNgKnmMl96XWcCk6AaeYhv2oeS2rBZgQYXy1r2G1FTzHSo6l1fCoOgGnmIZxtLxWzQJMiNBf62vUbAXPsZK9qIZD0wk4xTT0obwWsgATItRTXwPZCp5jJbfnMABsAkyIsA2nzSNdwXOs5PrcztgqwIQI63E8W6sVPMdKLsP5RW03AaeYhue5n6F1gAkRHhfh7KxX8BwrOU+kF639BJxiGr4W7YxCBZgQ4bqIZxNqBc+xku8ivyjDTcAn4vsW+SzCBog+ECCkQgbI+v0t6pkwASFFgJAiQEiFC5D7v3URz4YJCCkChFSoAFm/r0U7IyYgpAgQUgTYoUhrOEyA3P/1iQkIKQKEVIgAWb/7RTkzJiCkCBBS9gGyfo+LcHZMQEgRIKQIEFLWAXL/d577GTIBIUWAJ6RfifH8wDG2Abqvjnl0zhE6nyUTcKetibf1b1hGgDvkxkWE+Qgw096o3CJ0XcOWvx/Q6bBKhOTyfBwnMxNwQ6kL5njhXRDgghRM6WiIcJndClavqxahKJ+j2wuBCTjR6uIwDb8R4E0KonUUiv/TkVWAitWkjqD1/+/0FYZk2AnoNIFGnoRDBuh4wZ1eEC0NFWCEizxahDYB1r43iXRha3+uTveBQ0zAiFMlfc4jTMOuA+zhIvYeocV3QmqshB4vXOlzcjij7iZgD1NvTY/Pq6sAew1vqrfn2E2AI8T3lJ5riefr8G5YHuDZQyh1MSLq4XlbTsD39/fHo22jhjcV/QVoGeDn5+fj0bLoh15D1POQBnhk/RLeuiNno74PDPUmhPheS2cU6ZxCBBjtUB1EOS/7AAnvuNyzU65h2bfiXj1pwivL9bwtJyDxled6plYBpkMivnocz1cW4PwgCK8dp7O3/N0wGMXl8heJuFfhAdCeGwAAAABJRU5ErkJggg==";
var STAR_GOLD = "iVBORw0KGgoAAAANSUhEUgAAAKAAAACgCAYAAACLz2ctAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAASlSURBVHhe7dxRctMwFIXhlAXAbmD/j7AbuoESNQ51XTuRbUnnXOn/ZjqE4YFG/nOv03b6crlc3q4fgAQBnvD2+/v06HqQv16nR9jj2/QndprHlyz/jjwECCkChBQBHrC1blnD+xEgpAgQUgS407M1yxrehwAhRYCQIsAdctcrazgfAUKKACFFgJn2rlXWcB4ChBQBQooAM7BO6yHAigj3OQKEFAE+wRSriwArI+DHCBBSBPgA06s+AmyAkLcRIKQIcANTqw0CbISg1xEgpAhwBdOqHQJsiLC/IkBIEeACU6otAoQUATbGhP2MAGeIoz0ChBQBCjBpPxDghCg0CBBSBCjCxL0hwCti0CFASBGgEJOXAIlAjAkIKQKE1NABOqzf0W8BmICQIkBIDRug0+obeQ0zASFFgJAaMkDHlTfqGmYCQooAIUWARkZcw8MFOPKXPBwxASH1cv14uz2Mh2l28/LrdXoUT7EAiWEspaL/HyABoaV7wO/3gMSH1u7N8SYEUgQIqfcAI7+LQkyf7gETIkQr89ZWvwzDmxLUsDbkVu8BmYYobaupzTchRIhSHrWU9Z0QVjKOyBliWV+GYRpir9xmsgJMiBC59rRy6IcRWMnYsndQHf5pGCLE3NENmb2Cl1jJuDvTwuEAEyLE2QYOr+AlVvJYSg2fUxNwjmk4jpLXuliACRH2r/Q1LraCl1jJfak1XIpOwDmmYT9qXstqASZEGF/ta1htBS+xkmNpNTyqTsA5pmEcLa9VswATIvTX+ho1W8FLrGQvquHQdALOMQ19KK+FLMCECPXU10C2gpdYye05DACbABMibMNp80hX8BIruT63M7YKMCHCehzP1moFL7GSy3B+UdtNwDmm4XnuZ2gdYEKEx0U4O+sVvMRKzhPpRWs/AeeYhs9FO6NQASZEuC3i2YRawUus5JvIL8pwE/CO+D5EPouwAaIPBAipkAGyfr+KeiZMQEgRIKQIEFLhAuT+b1vEs2ECQooAIRUqQNbvc9HOiAkIKQKEFAF2KNIaDhMg9399YgJCigAhFSJA1u9+Uc6MCQgpAoSUfYCs3+MinB0TEFIECCkChJR1gNz/ned+hkxASBHgCelXYtw/cIxtgO6rYxmdc4TOZ8kE3OnRxHv0b1hHgDvkxkWE+Qgw096o3CJ0XcOWvx/Q6bBKhOTyfBwnMxPwgVIXzPHCuyDAFSmY0tEQ4Tq7FaxeVy1CUT5HtxcCE3Cm1cVhGn4gwKsUROsoFP+nI6sAFatJHUHr/9/pKwzJsBPQaQKNPAmHDNDxgju9IFoaKsAIF3m0CG0CrH1vEunC1v5cne4Dh5iAEadK+pxHmIZdB9jDRew9QovvhNRYCT1euNLn5HBG3U3AHqbelh6fV1cB9hreXG/PsZsAR4jvLj3XEs/X4d2wPMCzh1DqYkTUw/P2nIA//04PHhs1vLnoL0DPAP/8mB6si37oNUQ9D2mAR9Yv4W07cjbq+8BQb0KI77l0RpHOKUSA0Q7VQZTzsg+Q8I7LPTvlGpZ9K+7Zkya8slzP23ICEl95rmdqFWA6JOKrx/F8ZQEuD4Lw2nE6e8vfDYNRXC7/AIOEcHzenYdPAAAAAElFTkSuQmCC";



function dip2px(ctx, dips) {
	return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function procCmd(excm) {
	var parInt = excm.split(" ");
	var execCmd = parInt[0];
	switch (execCmd.toLowerCase()) {
		case "gui":
			{
				menuStartAsk();
				break;
			}
	}
}

function menuStartAsk() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			var alert = new android.app.AlertDialog.Builder(ctx);
			alert.setTitle("Confirm GUI Restart");

			var scroll = new android.widget.ScrollView(ctx);
			var layout = new android.widget.LinearLayout(ctx);
			layout.setOrientation(1);

			var note = new android.widget.TextView(ctx);
			note.setText("Restarting Core GUI Will shut down the menu and turn it back on.  Are you sure?");
			note.setTextColor(android.graphics.Color.WHITE);
			note.setGravity(android.view.Gravity.CENTER);
			note.setTextSize(20);

			var params = new android.view.ViewGroup.LayoutParams(-2, -2);

			layout.addView(note, params);
			alert.setView(layout);

			alert.setNegativeButton("Cancel", new android.content.DialogInterface.OnClickListener() {
				onClick: function(par1) {}
			});

			alert.setPositiveButton("Confirm", new android.content.DialogInterface.OnClickListener() {
				onClick: function(par1) {
					menuStartUp(ModPE.readData("BTNPOS-X"), ModPE.readData("BTNPOS-Y"));
				}
			});

			var dialog = alert.create();
			dialog.show();
		}
	}));
}

function newLevel() {
	menuStartUp(ModPE.readData("BTNPOS-X"), ModPE.readData("BTNPOS-Y"));
	cycle = 1;
	ModPE.saveData("CORE.Toggle", "FALSE");
	zoomBarProgress = 75;
	sbpProgress = 0;
	if (ModPE.readData("AlreadyActivated") != "pro") {
		if (ModPE.readData("AlreadyActivated") != "free") {
			ModPE.saveData("AlreadyActivated", "null");
		}
	}
}

function menuStartUp(x, y) {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			if (GUI != null) {
				GUI.dismiss();
				GUI = null;
			}
			try {
				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var btn = new android.widget.Button(ctx);
				btn.setText("Core");
				btn.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				btn.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						activate();
					}
				}));
				layout.addView(btn);

				GUI = new android.widget.PopupWindow(layout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				GUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor("#AAAAAA")));
				GUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, x, y);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cError: " + error);
			}
		}
	}));
}

function mainMenu() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Exit");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						menu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Heal");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Player.setHealth(20);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Kill Target");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setHealth(Player.getPointedEntity(), 0);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Zoom");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var zoomBar = new android.widget.SeekBar(ctx);
				zoomBar.setMax(75);
				zoomBar.setProgress(zoomBarProgress);
				zoomBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						zoomBarProgress = zoomBar.getProgress();
						ModPE.setFov(zoomBar.getProgress() + 1);

					}
				});
				menuLayout.addView(zoomBar);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Game Speed");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				if (ModPE.readData("/x02") == "true") {
					menuLayout.addView(button);
				}

				var tickBarProgress = 20;
				var tickBar = new android.widget.SeekBar(ctx);
				tickBar.setMax(50);
				tickBar.setProgress(tickBarProgress);
				tickBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						tickBarProgress = tickBar.getProgress();
						if (tickBarProgress == 0) {
							ModPE.resetFov();
						} else {
							ModPE.setGameSpeed(tickBar.getProgress());
						}
					}
				});
				if (ModPE.readData("/x02") == "true") {
					menuLayout.addView(tickBar);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Reset Game Speed");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.setGameSpeed(20);
						tickBarProgress = 20;
					}
				}));
				if (ModPE.readData("/x02") == "true") {
					menuLayout.addView(button);
				}

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Sprint");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var speedBarProgress = 0;
				var speedBar = new android.widget.SeekBar(ctx);
				speedBar.setMax(7);
				speedBar.setProgress(speedBarProgress);
				speedBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						speedBarProgress = speedBar.getProgress();
						if (speedBarProgress == 0) {
							removeSpeed()
						} else {
							removeSpeed();
							giveSpeed(speedBar.getProgress());
						}
					}
				});
				menuLayout.addView(speedBar);

				var button = new android.widget.Button(ctx);
				button.setText("Sneek");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						sneek();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Rocket");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				if (ModPE.readData("Rocket") == "TRUE") {
					menuLayout.addView(button);
				}

				var fuelValue = 0;
				var rocketFuel = new android.widget.SeekBar(ctx);
				rocketFuel.setMax(256);
				rocketFuel.setProgress(fuelValue);
				if (ModPE.readData("Rocket") == "TRUE") {
					menuLayout.addView(rocketFuel);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Launch");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						setVelY(getPlayerEnt(), rocketFuel.getProgress() * 2)
					}
				}));

				if (ModPE.readData("Rocket") == "TRUE") {
					menuLayout.addView(button);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Fly");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						fly();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dawn");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(0);
					}
				}));
				if (ModPE.readData("01x") == "true") {
					menuLayout.addView(button);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Morning");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(1200);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Noon");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(5000);
					}
				}));
				if (ModPE.readData("01x") == "true") {
					menuLayout.addView(button);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Afternoon");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(0);
					}
				}));
				if (ModPE.readData("01x") == "true") {
					menuLayout.addView(button);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Dusk");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(10000);
					}
				}));
				if (ModPE.readData("01x") == "true") {
					menuLayout.addView(button);
				}

				var button = new android.widget.Button(ctx);
				button.setText("Midnight");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(17256);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Radio Waves");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						explode(
							getPlayerX(),
							getPlayerY(),
							getPlayerZ(), 5);

						Level.setGrassColor(Math.floor(getPlayerX() + 0), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 2), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 2), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 3), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 3), Math.floor(getPlayerZ() + 0), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 0), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 2), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 2), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 3), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 3), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 0), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() + 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 2), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 2), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 2), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 3), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 3), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 3), Math.floor(getPlayerZ() - 1), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 0), Math.floor(getPlayerZ() - 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() - 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() - 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 2), Math.floor(getPlayerZ() - 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 2), Math.floor(getPlayerZ() - 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 0), Math.floor(getPlayerZ() + 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() + 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() + 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 2), Math.floor(getPlayerZ() + 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 2), Math.floor(getPlayerZ() + 2), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 0), Math.floor(getPlayerZ() - 3), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() - 3), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() - 3), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 0), Math.floor(getPlayerZ() + 3), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() - 1), Math.floor(getPlayerZ() + 3), radioColor);
						Level.setGrassColor(Math.floor(getPlayerX() + 1), Math.floor(getPlayerZ() + 3), radioColor);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Drop Hand");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.dropItem(getPlayerX(), getPlayerY() + 15, getPlayerZ(), 3, getCarriedItem(), Player.getCarriedItemCount(), Player.getCarriedItemData());
						Player.clearInventorySlot(Player.getSelectedSlotId());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Creative");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setGameMode(1);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Survival");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setGameMode(0);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);

				button.setText("Clear");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setGameMode(Level.getGameMode());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Bomb");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						explode(
							getPlayerX(),
							getPlayerY(),
							getPlayerZ(), 5);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Nuke");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						explode(
							getPlayerX(),
							getPlayerY(),
							getPlayerZ(), 20);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setText("Ascend");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						for (i = 1; i <= 128; i++) {
							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;
							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {
								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());
							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setText("Descend");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						for (i = -1; i >= -128; i--) {
							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;
							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {
								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());
							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setText("Surface");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {

						for (i = 1; i <= 128; i++) {

							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;

							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {

								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());

							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setText("Ground Level");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						for (i = -1; i >= -99999999; i--) {
							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;
							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {
								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());
							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setText("Bounce");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						setVelY(getPlayerEnt(), 3);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setText("Repair");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						addItemInventory(getCarriedItem(), 1, 0);

						Player.clearInventorySlot(Player.getSelectedSlotId());


					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Burn Target");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setFireTicks(Player.getPointedEntity(), 32);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Carry Target");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.rideAnimal(Player.getPointedEntity(), getPlayerEnt());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Ride Target");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.rideAnimal(getPlayerEnt(), Player.getPointedEntity());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Reset Morph");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.leaveGame();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Chicken");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.chicken);
						Entity.setMobSkin(Player.getEntity(), "mob/chicken.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Cow");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.cow);
						Entity.setMobSkin(Player.getEntity(), "mob/cow.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Creeper");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.creeper);
						Entity.setMobSkin(Player.getEntity(), "mob/creeper.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Enderman");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.enderMan);
						Entity.setMobSkin(Player.getEntity(), "mob/enderman.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Pig");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.pig);
						Entity.setMobSkin(Player.getEntity(), "mob/pig.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph White Sheep");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.sheep);
						Entity.setMobSkin(Player.getEntity(), "mob/sheep.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Silverfish");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.silverfish);
						Entity.setMobSkin(Player.getEntity(), "mob/silverfish.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Skeleton");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.skeleton);
						Entity.setMobSkin(Player.getEntity(), "mob/skeleton.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Spider");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.spider);
						Entity.setMobSkin(Player.getEntity(), "mob/spider.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Normal Villager");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/villager.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Butcher Villager");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/butcher.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Farmer Villager");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/farmer.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Librarian Villager");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/librarian.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Priest Villager");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/priest.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Blacksmith Villager");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/smith.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Zombie");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/zombie.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Wolf");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.wolf);
						Entity.setMobSkin(Player.getEntity(), "mob/wolf.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Ghast");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.ghast);
						Entity.setMobSkin(Player.getEntity(), "mob/ghast.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Lava Slime");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.lavaSlime);
						Entity.setMobSkin(Player.getEntity(), "mob/lavaSlime.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Slime");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.slime);
						Entity.setMobSkin(Player.getEntity(), "mob/slime.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morph Zombie Pigman");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setRenderType(Player.getEntity(), EntityRenderType.player);
						Entity.setMobSkin(Player.getEntity(), "mob/villager/pigzombie.png");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Spells");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						menu.dismiss();
						spells();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Summon");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						summon();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Chat");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						chatMenu();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Warps");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						warps();
						menu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Too Many Items");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						tooManyItems();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Grass Marker");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						grassMarker();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Server Jump");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						serverJump();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("In Game Skin Change");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						igsc();
						ModPE.saveData("SelEnt", "Not Selected");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Options");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						menu.dismiss();
						options();
					}
				}));
				menuLayout.addView(button);

				menu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function notActivated() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);
				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core Free By Teh Picix");
				button.setTextColor(android.graphics.Color.WHITE);
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);
				var button = new android.widget.Button(ctx);
				button.setText("Exit");
				button.setTextColor(android.graphics.Color.WHITE);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						errMenu.dismiss();
						ModPE.saveData("CORE.Toggle", "FALSE");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Heal");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Player.setHealth(20);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Kill Target");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setHealth(Player.getPointedEntity(), 0);
					}
				}));
				menuLayout.addView(button)

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Zoom");
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var zoomBar = new android.widget.SeekBar(ctx);
				zoomBar.setMax(50);
				zoomBar.setProgress(zoomBarProgress);
				zoomBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						zoomBarProgress = zoomBar.getProgress();
						if (zoomBarProgress == 0) {
							ModPE.resetFov();
						} else {
							ModPE.setFov(zoomBar.getProgress() / 14);
						}
					}
				});
				menuLayout.addView(zoomBar);

				var button = new android.widget.Button(ctx);
				button.setText("Sneek");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						sneek();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Day");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(0);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Night");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setTime(17256);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Drop Hand");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.dropItem(getPlayerX(), 128, getPlayerZ(), 3, getCarriedItem(), Player.getCarriedItemCount(), Player.getCarriedItemData());
						Player.clearInventorySlot(Player.getSelectedSlotId());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Creative");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setGameMode(1);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Survival");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setGameMode(0);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);

				button.setText("Clear");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Level.setGameMode(Level.getGameMode());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Bomb");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						explode(
							getPlayerX(),
							getPlayerY(),
							getPlayerZ(), 5);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Nuke");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						explode(
							getPlayerX(),
							getPlayerY(),
							getPlayerZ(), 20);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setTextColor(android.graphics.Color.RED);
				button.setText("Ascend");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						for (i = 1; i <= 128; i++) {
							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;
							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {
								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());
							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setTextColor(android.graphics.Color.RED);
				button.setText("Descend");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						for (i = -1; i >= -128; i--) {
							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;
							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {
								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());
							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setTextColor(android.graphics.Color.RED);
				button.setText("Surface");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {

						for (i = 1; i <= 128; i++) {

							surfaceFloor = (Math.floor(Player.getY()) - 2) + i;

							if (Level.getTile(Player.getX(), surfaceFloor, Player.getZ()) != 0 && Level.getTile(Player.getX(),
									surfaceFloor + 1, Player.getZ()) == 0 && Level.getTile(Player.getX(), surfaceFloor + 2, Player.getZ()) == 0) {

								Entity.setPosition(Player.getEntity(), Player.getX(), surfaceFloor + 3, Player.getZ());

							}
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setTextColor(android.graphics.Color.RED);
				button.setText("Bounce");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						setVelY(getPlayerEnt(), 3);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setTextColor(android.graphics.Color.RED);
				button.setText("Repair");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						addItemInventory(getCarriedItem(), 1, 0);

						Player.clearInventorySlot(Player.getSelectedSlotId());


					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Burn Target");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setFireTicks(Player.getPointedEntity(), 32);
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Carry Target");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.rideAnimal(Player.getPointedEntity(), getPlayerEnt());
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Ride Target");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.rideAnimal(getPlayerEnt(), Player.getPointedEntity());
					}
				}));
				menuLayout.addView(button);

				errMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3,
					ctx.getWindowManager().getDefaultDisplay().getHeight());
				errMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				errMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {

			}
		}
	}));
}

function spells() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						spellsMenu.dismiss();
						mainMenu();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Clear Effects");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						clearEffects();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Speed");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectSpeed();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Slowness");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectSlow();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Haste");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectHaste();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Mining Fatigue");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectMiningFati();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Damage Boost");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectDamageBoost();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Heath");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectHeal();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Harm");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectHarm();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Jump Boost");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectJump();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Nausea");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectNausea();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Regeneration");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectRegeneration();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Resistance");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectResistance();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Fire Resistance");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectFireResistance();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Water Breathing");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectWaterBreathing();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Invisibility");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectInvis();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Blindness");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectBlind();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Night Vision");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectNVis();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Hunger");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectHunger();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Weakness");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectWeakness();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Poison");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectPoison();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Wither");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectWither();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Health Boost");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectHealthBoost();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Absorption");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectAbsorption();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Saturation");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						effectSaturation();
					}
				}));
				menuLayout.addView(button);

				spellsMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3,
					ctx.getWindowManager().getDefaultDisplay().getHeight());
				spellsMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				spellsMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));

}

function removeSpeed() {
	Entity.removeEffect(getPlayerEnt(), MobEffect.movementSpeed);
}

function giveSpeed(value) {
	Entity.addEffect(getPlayerEnt(), MobEffect.movementSpeed, 60 * 15000 * 20, value, true, false);
}

function fly() {
	if (ModPE.readData("FlyMode") != "TRUE") {
		Player.setCanFly(1);
		ModPE.saveData("FlyMode", "TRUE");
	} else {
		Player.setCanFly(0);
		ModPE.saveData("SprintMode", "FALSE");
	}
}

function sneek() {
	if (ModPE.readData("SprintMode") != "TRUE") {
		Entity.setSneaking(getPlayerEnt(), 1);
		ModPE.saveData("SprintMode", "TRUE");
	} else {
		Entity.setSneaking(getPlayerEnt(), 0);
		ModPE.saveData("SprintMode", "FALSE");
	}
}

function clearEffects() {
	Entity.removeAllEffects(getPlayerEnt());
}

function effectSpeed() {
	Entity.addEffect(getPlayerEnt(), MobEffect.movementSpeed, 60 * 20 * 15000, 2, true, false);
}

function effectSlow() {
	Entity.addEffect(getPlayerEnt(), MobEffect.movementSlowdown, 60 * 20 * 15000, 2, true, false);
}

function effectHaste() {
	Entity.addEffect(getPlayerEnt(), MobEffect.digSpeed, 60 * 20 * 15000, 2, true, false);
}

function effectMiningFati() {
	Entity.addEffect(getPlayerEnt(), MobEffect.digSlowdown, 60 * 20 * 15000, 2, true, false);
}

function effectDamageBoost() {
	Entity.addEffect(getPlayerEnt(), MobEffect.damageBoost, 60 * 20 * 15000, 2, true, false);
}

function effectHeal() {
	Entity.addEffect(getPlayerEnt(), MobEffect.heal, 1, 0, true, false);
}

function effectHarm() {
	Entity.addEffect(getPlayerEnt(), MobEffect.harm, 1, 0, true, false);
}

function effectJump() {
	Entity.addEffect(getPlayerEnt(), MobEffect.jump, 60 * 20 * 15000, 2, true, false);
}

function effectNausea() {
	Entity.addEffect(getPlayerEnt(), MobEffect.confusion, 60 * 20 * 15000, 2, true, false);
}

function effectRegeneration() {
	Entity.addEffect(getPlayerEnt(), MobEffect.regeneration, 60 * 20 * 15000, 2, true, false);
}

function effectResistance() {
	Entity.addEffect(getPlayerEnt(), MobEffect.damageResistance, 60 * 20 * 15000, 2, true, false);
}

function effectFireResistance() {
	Entity.addEffect(getPlayerEnt(), MobEffect.fireResistance, 60 * 20 * 15000, 2, true, false);
}

function effectWaterBreathing() {
	Entity.addEffect(getPlayerEnt(), MobEffect.waterBreathing, 60 * 20 * 15000, 2, true, false);
}

function effectInvis() {
	Entity.addEffect(getPlayerEnt(), MobEffect.invisibility, 60 * 20 * 15000, 2, true, false);
}

function effectBlind() {
	Entity.addEffect(getPlayerEnt(), MobEffect.blindness, 60 * 20 * 15000, 2, true, false);
}

function effectNVis() {
	Entity.addEffect(getPlayerEnt(), MobEffect.nightVision, 60 * 20 * 15000, 2, true, false);
}

function effectHunger() {
	Entity.addEffect(getPlayerEnt(), MobEffect.hunger, 60 * 20 * 15000, 2, true, false);
}

function effectWeakness() {
	Entity.addEffect(getPlayerEnt(), MobEffect.weakness, 60 * 20 * 15000, 2, true, false);
}

function effectPoison() {
	Entity.addEffect(getPlayerEnt(), MobEffect.poison, 60 * 20 * 15000, 2, true, false);
}

function effectWither() {
	Entity.addEffect(getPlayerEnt(), MobEffect.wither, 60 * 20 * 15000, 2, true, false);
}

function effectHealthBoost() {
	Entity.addEffect(getPlayerEnt(), MobEffect.healthBoost, 60 * 20 * 15000, 2, true, false);
}

function effectAbsorption() {
	Entity.addEffect(getPlayerEnt(), MobEffect.absorption, 60 * 20 * 15000, 2, true, false);
}

function effectSaturation() {
	Entity.addEffect(getPlayerEnt(), MobEffect.saturation, 60 * 20 * 15000, 2, true, false);
}

function options() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						mainMenu();
						optionsMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Info");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						info();
						optionsMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Art Museum");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						artMenu();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Settings");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						settings();
						optionsMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Core Plugins");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						otherM();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Easter Eggs");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						easterEggs();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("☆ Support ☆");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						support();
					}
				}));
				menuLayout.addView(button);

				optionsMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3,
					ctx.getWindowManager().getDefaultDisplay().getHeight());
				optionsMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				optionsMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function info() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						options();
						infoMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Version: 1.0");
				button.setTextColor(android.graphics.Color.parseColor("#AAAAAA"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("By: Teh Picix");
				button.setTextColor(android.graphics.Color.parseColor("#AAAAAA"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Size: 550KB");
				button.setTextColor(android.graphics.Color.parseColor("#AAAAAA"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(CORE_LOGO, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				image.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (ModPE.readData("01x") != "true") {
							chat("§6You unlocked §cMore Times§6.");
						}
						ModPE.saveData("01x", "true");
					}
				}));
				menuLayout.addView(image);

				infoMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3,
					ctx.getWindowManager().getDefaultDisplay().getHeight());
				infoMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				infoMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function morphFloor() {
	if (ModPE.readData("MorphFloorMode") == "ACTIVE") {
		ModPE.saveData("MorphFloorMode", "!ACTIVE");
		effectInvis();
		setTile(getPlayerX(), getPlayerY(), getPlayerZ(), getTile(getPlayerX(), Math.floor(getPlayerY() - 1), getPlayerZ()));
		setTile(getPlayerX(), getPlayerY(), Math.floor(getPlayerZ() - 1));
		setTile(getPlayerX(), getPlayerY(), Math.floor(getPlayerZ() + 1));
		setTile(Math.floor(getPlayerX() + 1), getPlayerY(), getPlayerZ());
		setTile(Math.floor(getPlayerX() - 1), getPlayerY(), getPlayerZ());
	} else {
		ModPE.saveData("MorphFloorMode", "ACTIVE");
	}
}

function tooManyItems() {
	ModPE.saveData("TooManyItemsBoolean", "StabilityTrue");
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						mainMenu();
						tooManyItemsMenu.dismiss();
					}
				}));
				layout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(14);
				button.setText("Item ID:");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setLayoutParams(textParams2);
				layout.addView(button);

				var itemId = new android.widget.EditText(ctx);
				itemId.setText("");
				itemId.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);
				layout.addView(itemId);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(14);
				button.setText("Item Count");
				button.setLayoutParams(textParams2);
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				layout.addView(button);

				var itemCount = new android.widget.EditText(ctx);
				itemCount.setText("1");
				itemCount.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);
				layout.addView(itemCount);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(14);
				button.setText("Item Damage:");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setLayoutParams(textParams2);
				layout.addView(button);

				var itemDmg = new android.widget.EditText(ctx);
				itemDmg.setText("");
				itemDmg.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);
				layout.addView(itemDmg);

				var addBtnParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				addBtnParams.setMargins(0, dip2px(ctx, 10), 0, 0);

				var button = new android.widget.Button(ctx);
				button.setText("Add to Inventory");
				button.setLayoutParams(addBtnParams);
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						addItemInv(parseInt(itemId.getText()), parseInt(itemDmg.getText()), parseInt(itemCount.getText()));
					}
				}));
				layout.addView(button);

				var tooManyItemsMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				tooManyItemsMenu.setContentView(layout);
				tooManyItemsMenu.setFocusable(true);
				infotooManyItemsMenu = tooManyItemsMenu;
				tooManyItemsMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				tooManyItemsMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				tooManyItemsMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat(error);
			}
		}
	}));
}

function screenPos_Background() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);
				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);
				screenPos_Background_2 = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth(), ctx.getWindowManager().getDefaultDisplay().getHeight());
				screenPos_Background_2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				screenPos_Background_2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function screenPos_CloseBtn() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var button = new android.widget.Button(ctx);
				button.setText("Close");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						screenPos_Background_2.dismiss();
						screenPos_CloseBtn_2.dismiss();
						screenPos_SetBtn_2.dismiss();
						screenPos_DragPos_2.dismiss();
					}
				}));
				layout.addView(button);

				screenPos_CloseBtn_2 = new android.widget.PopupWindow(layout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				screenPos_CloseBtn_2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
				screenPos_CloseBtn_2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, 0, 0);
			} catch (err) {
				print("An error occured: " + err);
			}
		}
	}));
}

function screenPos_DragPos() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	dip = ctx.getResources().getDisplayMetrics().density;
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			var fill = new android.widget.LinearLayout.LayoutParams(-1, -1, 1);
			new android.os.Handler().postDelayed(new java.lang.Runnable({
				run: function() {
					var layout = new android.widget.LinearLayout(ctx);
					var text = new android.widget.TextView(ctx);
					text.setLayoutParams(fill);
					text.setBackgroundColor(android.graphics.Color.rgb(170, 170, 255));
					text.setTextColor(android.graphics.Color.rgb(255, 255, 255));
					text.setAlpha(0.75);
					text.setTextSize(15);
					text.setGravity(17);
					text.setText("New Button");
					layout.addView(text);
					screenPos_DragPos_2 = new android.widget.PopupWindow(layout, 65 * dip, 60 * dip);
					tpx = 5 * dip;
					tpy = 25 * dip;
					var mX;
					var mY;
					screenPos_DragPos_2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER | android.view.Gravity.CENTER, tpx, tpy);
					text.setOnTouchListener(new android.view.View.OnTouchListener({
						onTouch: function(v, e) {
							switch (e.getAction()) {
								case 0:
									mX = e.getX();
									mY = e.getY();
									break;
								case 2:
									var delX = parseInt(e.getX() - mX);
									var delY = parseInt(e.getY() - mY);
									tpx = tpx + delX;
									tpy = tpy + delY;
									screenPos_DragPos_2.update(parseInt(tpx), parseInt(tpy), -1, -1);
									break;
							}
							return true;
						}
					}));
				}
			}), 1500);
		}
	}));
}

function screenPos_SetBtn() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var button = new android.widget.Button(ctx);
				button.setText(" Set ");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						screenPos_Background_2.dismiss();
						screenPos_CloseBtn_2.dismiss();
						screenPos_SetBtn_2.dismiss();
						ModPE.saveData("BTNPOS-X", tpx);
						ModPE.saveData("BTNPOS-Y", tpy);
						GUI.dismiss();
						menuStartUp(ModPE.readData("BTNPOS-X"), ModPE.readData("BTNPOS-Y"));
						settingsMenu.dismiss();
						settings();
						screenPos_DragPos_2.dismiss();
					}
				}));
				layout.addView(button);

				screenPos_SetBtn_2 = new android.widget.PopupWindow(layout, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				screenPos_SetBtn_2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
				screenPos_SetBtn_2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (err) {
				print("An error occured: " + err);
			}
		}
	}));
}

function settings() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						options();
						settingsMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Button Position");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						screenPos_Background();
						screenPos_CloseBtn();
						screenPos_SetBtn();
						screenPos_DragPos();
						if (ModPE.readData("/x02") != "true") {
							ModPE.saveData("/x02", "true");
							chat("§cCore: §6Unlocked Game Speed");
						}
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Button Color");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						toColors();
					}
				}));
				if (ModPE.readData("Installed.ColorBtns.js") == "TRUE") {
					menuLayout.addView(button);
				}

				settingsMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3,
					ctx.getWindowManager().getDefaultDisplay().getHeight());
				settingsMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				settingsMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function leaveGame(){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({ run: function(){
        if(GUI != null){
            GUI.dismiss();
            GUI = null;
        }
    }}));
}

function warps() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						mainMenu();
						warpsMenu.dismiss();
						dismissWarps();
					}
				}));
				layout.addView(button);

				var warp = new android.widget.EditText(ctx);
				warp.setHint("Warp Name:");
				layout.addView(warp);

				var button = new android.widget.Button(ctx);
				button.setText("Set");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData(warp.getText() + "X", getPlayerX());
						ModPE.saveData(warp.getText() + "Y", getPlayerY());
						ModPE.saveData(warp.getText() + "Z", getPlayerZ());
						ModPE.saveData(warp.getText() + "D", "HomeWasSet");
						chat("§6The Warp §c" + warp.getText() + " §6has been set.");
					}
				}));
				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Teleport");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (ModPE.readData(warp.getText() + "D") == "HomeWasSet") {
							setPosition(
								getPlayerEnt(),
								ModPE.readData(warp.getText() + "X"),
								ModPE.readData(warp.getText() + "Y"),
								ModPE.readData(warp.getText() + "Z"));
							chat("§6Teleported to The Warp §c" + warp.getText() + "§6.");
						} else {
							chat("§6The warp §c" + warp.getText() + "§6 was not found.");
						}
					}
				}));
				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Remove");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (ModPE.readData(warp.getText() + "D") == "HomeWasSet") {
							ModPE.saveData(warp.getText() + "D", "HomeNotSet");
							chat("§6The warp §c" + warp.getText() + "§6 was removed.");
						} else {
							chat("§6The warp §c" + warp.getText() + "§6 was not found.");
						}
					}
				}));
				layout.addView(button);

				var warpsMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				warpsMenu.setContentView(layout);
				warpsMenu.setFocusable(true);
				warpsMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				warpsMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				warpsMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function deathHook(m, v) {
	if (v == getPlayerEnt()) {
		ModPE.saveData("CanReturn?.world=" + Level.getWorldName());
		chat("§6You Died! You can now go to §cCore > Warps > Last Deathpoint");
	}
}

function runPermRocket(rating) {
	if (ModPE.readData("Rocket") != "TRUE") {
		ModPE.saveData("Rocket", "TRUE");
		chat("§6Thank you for rating §c" + rating + "§c Star(s)§6.");
	} else {
		chat("§6Thank you for rating §c" + rating + "§c Star(s)§6. But you can only support once");
	}
}

function savePos() {
	btnPos = "set";
}

function dismissWarps() {
	warpsMenu = null;
	warpsStable = false;
}

function support() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);
				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("☆ Core By Teh Picix ☆");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("☆ Back ☆");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						rateMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var rateBar = new android.widget.RatingBar(ctx);
				rateBar.setStepSize(0.5);
				menuLayout.addView(rateBar);

				var button = new android.widget.Button(ctx);
				button.setText("☆ Support ☆");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						runPermRocket(rateBar.getRating());
					}
				}));
				menuLayout.addView(button);

				rateMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				rateMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				rateMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function serverJump() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						mainMenu();
						jumpMenu.dismiss();
					}
				}));
				layout.addView(button);

				var sIp = new android.widget.EditText(ctx);
				sIp.setHint("Server Address:");
				layout.addView(sIp);

				var sPt = new android.widget.EditText(ctx);
				sPt.setHint("Server Port:");
				sPt.setText("19132");
				layout.addView(sPt);

				var button = new android.widget.Button(ctx);
				button.setText("Jump");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						jumpTo(sIp.getText(), sPt.getText());
					}
				}));
				layout.addView(button);

				var jumpMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				jumpMenu.setContentView(layout);
				jumpMenu.setFocusable(true);
				jumpMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				jumpMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				jumpMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function chatMenu() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						chatMenu.dismiss();
					}
				}));
				layout.addView(button);

				var chat = new android.widget.EditText(ctx);
				chat.setHint("Chat");
				layout.addView(chat);

				var button = new android.widget.Button(ctx);
				button.setText("Send");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						sendChat(chat.getText());
					}
				}));
				layout.addView(button);

				var chatMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				chatMenu.setContentView(layout);
				chatMenu.setFocusable(true);
				chatMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				chatMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				chatMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function jumpTo(ip, port) {
	Server.joinServer(ip, port);
}

function sendChat(chat) {
	Server.sendChat(chat);
}

function summon() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						summonMenu.dismiss();
					}
				}));
				layout.addView(button);

				var cImg = false;
				var button = new android.widget.CheckBox(ctx);
				button.setText("Custom Image");
				button.setChecked(cImg);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (!cImg) {
							cImg = true;
						} else {
							cImg = false;
						}
					}
				}));
				layout.addView(button);

				var path = new android.widget.EditText(ctx);
				path.setHint("Image Path");
				layout.addView(path);

				var cItm = false;
				var button = new android.widget.CheckBox(ctx);
				button.setText("Custom Item");
				button.setChecked(cItm);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (!cItm) {
							cItm = true;
						} else {
							cItm = false;
						}
					}
				}));
				layout.addView(button);

				var cItem = new android.widget.EditText(ctx);
				cItem.setHint("Carried Item");
				layout.addView(cItem);

				var eType = new android.widget.EditText(ctx);
				eType.setHint("Entity Type");
				layout.addView(eType);

				var button = new android.widget.Button(ctx);
				button.setText("Summon");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				};
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (cImg != false) {
							if (cItm != false) {
								summonMob(eType.getText(), cItem.getText(), path.getText());
							}
						}
						if (cImg != false) {
							if (cItm != true) {
								summonMob(eType.getText(), 0, path.getText());
							}
						}
						if (cImg != true) {
							if (cItm != false) {
								summonMob(eType.getText(), cItem.getText());
							}
						}
						if (cImg != true) {
							if (cItm != true) {
								summonMob(eType.getText());
							}
						}
					}
				}));
				layout.addView(button);

				var summonMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				summonMenu.setContentView(layout);
				summonMenu.setFocusable(true);
				summonMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				summonMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				summonMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function summonMob(mob, holding, img) {
	Level.spawnMob(getPlayerX(), getPlayerY(), getPlayerZ(), mob, img);
	Entity.setCarriedItem(mob, holding);
}

function easterEggs() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);
				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						easterMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Rocket");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_GOLD, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				if (ModPE.readData("Rocket") == "TRUE") {
					menuLayout.addView(image);
				}

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_SILVER, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				if (ModPE.readData("Rocket") != "TRUE") {
					menuLayout.addView(image);
				}

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Mo' Times");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_GOLD, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				if (ModPE.readData("01x") == "TRUE") {
					menuLayout.addView(image);
				}

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_SILVER, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				if (ModPE.readData("01x") != "TRUE") {
					menuLayout.addView(image);
				}

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Game Tick");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_GOLD, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				if (ModPE.readData("/x02") == "true") {
					menuLayout.addView(image);
				}

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_SILVER, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				if (ModPE.readData("/x02") != "true") {
					menuLayout.addView(image);
				}

				easterMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				easterMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				easterMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function artMenu() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						artMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(CORE_LOGO, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				menuLayout.addView(image);


				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(CORE_SORCE, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				menuLayout.addView(image);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(CORE_BTN, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				menuLayout.addView(image);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_SILVER, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				menuLayout.addView(image);

				var image = new android.widget.ImageView(ctx);
				var edmd = android.util.Base64.decode(STAR_GOLD, 0);
				image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));
				menuLayout.addView(image);

				artMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3,
					ctx.getWindowManager().getDefaultDisplay().getHeight());
				artMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				artMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat("§cCore Security: §6Their was an error tryng to open a folder. Contact §cteh.picix@gmail.com §6with your issue and it should be fixed and updated within 72 hours. §cERROR: Parse Packages §6" + error);
			}
		}
	}));
}

function activate() {
	if (ModPE.readData("AlreadyActivated") == "pro") {
		mainMenu();
	} else {
		pleaseActivate();
	}
}

function pleaseActivate() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Exit");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						chooseMenu.dismiss();
						ModPE.saveData("CORE.Toggle", "FALSE");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Activation file series was not found.  To purchase these files go to the Google Playstore and buy CoreMod for $0.98.  Then click Download Activation Series.  Next close BlockLauncher and open it agen and Core will activate pro.  To get to Google Playstore click CoreMod.");
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.LEFT);

				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("• Terms And Aggrements •");
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.CENTER);
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(15);
				button.setText("• You purchased this software.");
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.LEFT);
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(15);
				button.setText("• You wont redistribute this as your own.");
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.LEFT);
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(15);
				button.setText("• You wont redistribute this as your own.");
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.LEFT);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Proceed In Free");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						chooseMenu.dismiss();
						notActivated();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("CoreMod");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						openChrome("https://play.google.com/store/apps/details?id=com.picixapps.coremod");
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Admin Bypass");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						adminBypass();
						chooseMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				chooseMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				chooseMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				chooseMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function adminBypass() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(14);
				button.setText("Bypass Code:");
				button.setTextColor(android.graphics.Color.RED);
				button.setLayoutParams(textParams2);
				layout.addView(button);

				var evalCode = new android.widget.EditText(ctx);
				evalCode.setText("");
				layout.addView(evalCode);

				var button = new android.widget.Button(ctx);
				button.setText("Go");
				button.setTextColor(android.graphics.Color.RED);
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (evalCode.getText() == "/x1255gg") {
							Level.playSoundEnt(getPlayerEnt(), "random.glass", 1.00, 2.00);
							mainMenu();
							evalCodeMenu.dismiss();
							ModPE.saveData("AlreadyActivated", "pro");
						} else {
							Level.playSoundEnt(getPlayerEnt(), "mob.zombiedeath", 1.00, 2.00);
							evalCodeMenu.dismiss();
						}
					}
				}));
				layout.addView(button);

				var evalCodeMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				evalCodeMenu.setContentView(layout);
				evalCodeMenu.setFocusable(true);
				infoEvalCodeMenu = evalCodeMenu;
				evalCodeMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				evalCodeMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				evalCodeMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat(error);
			}
		}
	}));
}

function grassMarker() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						grassMenu.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Use RGB");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						useRGB();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Use HEX");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						useHEX();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Use Sliders");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						useSLI();
					}
				}));
				menuLayout.addView(button);

				grassMenu = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				grassMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				grassMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}


function markGrass(r, g, b) {
	Level.setGrassColor(getPlayerX(), getPlayerZ(), rgb2Hex(r, g, b));
}

function componentToHex(c) {
	var hex = c.toString(16);
	return hex.length == 1 ? "0" + hex : hex;
}

function rgb2Hex(r, g, b) {
	return "0x" + componentToHex(r) + componentToHex(g) + componentToHex(b);
}

function useRGB() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						markRGBMenu.dismiss();
					}
				}));
				layout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Red:")
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.LEFT);

				layout.addView(button);

				var red = new android.widget.EditText(ctx);
				red.setHint("Red");
				red.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);
				layout.addView(red);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Green:");
				button.setTextColor(android.graphics.Color.GREEN);
				button.setGravity(android.view.Gravity.LEFT);

				layout.addView(button);

				var green = new android.widget.EditText(ctx);
				green.setHint("Green");
				green.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);
				layout.addView(green);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Blue:")
				button.setTextColor(android.graphics.Color.BLUE);
				button.setGravity(android.view.Gravity.LEFT);

				layout.addView(button);

				var blue = new android.widget.EditText(ctx);
				blue.setHint("Blue");
				blue.setInputType(android.text.InputType.TYPE_CLASS_NUMBER);
				layout.addView(blue);

				var button = new android.widget.Button(ctx);
				button.setText("Color Grass");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						markGrass(parseInt(red.getText()), parseInt(green.getText()), parseInt(blue.getText()));
					}
				}));
				layout.addView(button);

				var tv = new android.widget.TextView(ctx);
				tv.setText("•");
				tv.setGravity(android.view.Gravity.CENTER);
				tv.setTextColor(android.graphics.Color.rgb(red.getText(), green.getText(), blue.getText()));
				tv.setBackgroundColor(android.graphics.Color.rgb(red.getText(), green.getText(), blue.getText()));

				var button = new android.widget.Button(ctx);
				button.setText("Preview");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						layout.addView(tv);
					}
				}));
				layout.addView(button);

				var markRGBMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				markRGBMenu.setContentView(layout);
				markRGBMenu.setFocusable(true);
				markRGBMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				markRGBMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				markRGBMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat(error);
			}
		}
	}));
}

function useHEX() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						markHEXMenu.dismiss();
					}
				}));
				layout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Hex Value:")
				button.setGravity(android.view.Gravity.LEFT);

				layout.addView(button);

				var hex = new android.widget.EditText(ctx);
				hex.setHint("Don't use #");
				layout.addView(hex);

				var button = new android.widget.Button(ctx);
				button.setText("Color Grass");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						markHex(parseInt(hex.getText()));
					}
				}));
				layout.addView(button);

				var markHEXMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				markHEXMenu.setContentView(layout);
				markHEXMenu.setFocusable(true);
				markHEXMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				markHEXMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				markHEXMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat(error);
			}
		}
	}));
}

function markHex(hex) {
	Level.setGrassColor(getPlayerX(), getPlayerZ(), conv2HTML(hex));
}

function conv2HTML(hex) {
	return "0x" + hex;
}

function useSLI() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);

				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						markSLIMenu.dismiss();
					}
				}));
				layout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Red:")
				button.setTextColor(android.graphics.Color.RED);
				button.setGravity(android.view.Gravity.LEFT);
				layout.addView(button);

				var redBar = new android.widget.SeekBar(ctx);
				var redBarProgress = 0;
				redBar.setMax(255);
				redBar.setProgress(redBarProgress);
				redBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						redBarProgress = redBar.getProgress();
					}
				});
				layout.addView(redBar);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Green:")
				button.setTextColor(android.graphics.Color.GREEN);
				button.setGravity(android.view.Gravity.LEFT);
				layout.addView(button);

				var greenBar = new android.widget.SeekBar(ctx);
				var greenBarProgress = 0;
				greenBar.setMax(255);
				greenBar.setProgress(greenBarProgress);
				greenBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						greenBarProgress = greenBar.getProgress();
					}
				});
				layout.addView(greenBar);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(14);
				button.setText("Blue:")
				button.setTextColor(android.graphics.Color.BLUE);
				button.setGravity(android.view.Gravity.LEFT);
				layout.addView(button);

				var blueBar = new android.widget.SeekBar(ctx);
				var blueBarProgress = 0;
				blueBar.setMax(255);
				blueBar.setProgress(blueBarProgress);
				blueBar.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
					onProgressChanged: function(view) {
						blueBarProgress = blueBar.getProgress();
					}
				});
				layout.addView(blueBar);

				var button = new android.widget.Button(ctx);
				button.setText("Color Grass");
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						markGrass(parseInt(redBar.getProgress()), parseInt(greenBar.getProgress()), parseInt(blueBar.getProgress()));
					}
				}));
				layout.addView(button);

				var markSLIMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				markSLIMenu.setContentView(layout);
				markSLIMenu.setFocusable(true);
				markSLIMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				markSLIMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				markSLIMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat(error);
			}
		}
	}));
}

function openChrome(URL) {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			var webs = new android.webkit.WebView(ctx);
			var webset = webs.getSettings();
			webset.setJavaScriptEnabled(true);
			webs.setWebChromeClient(new android.webkit.WebChromeClient());
			webs.setWebViewClient(new android.webkit.WebViewClient());
			webs.loadUrl(URL.toString());
			new android.app.AlertDialog.Builder(ctx).setView(webs).show();
		}
	}));
}

function igsc() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menu = new android.widget.PopupWindow();
				menu.setFocusable(true);
				infoMenu = menu;

				var layout = new android.widget.LinearLayout(ctx);
				layout.setOrientation(1);

				var textParams = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams.setMargins(dip2px(ctx, 5), 0, 0, 0);

				var textParams2 = new android.widget.LinearLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				textParams2.setMargins(dip2px(ctx, 5), dip2px(ctx, 10), 0, 0);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix")
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);
				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						entitysMenu.dismiss();
					}
				}));
				layout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Entity: " + ModPE.readData("SelEnt"));
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.LEFT);
				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Choose Entity");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("SelEnt", Player.getPointedEntity());
						entitySkinMenu.dismiss();
						igsc();
					}
				}));
				layout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Me");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("SelEnt", getPlayerEnt());
						entitySkinMenu.dismiss();
						igsc();
					}
				}));
				layout.addView(button);

				var path = new android.widget.EditText(ctx);
				path.setHint("Entity Skin Location");
				path.setText("/sdcard/MyNewSkin.png");
				layout.addView(path);

				var button = new android.widget.Button(ctx);
				button.setText("Set");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						Entity.setMobSkin(getPlayerEnt(), path.getText());
					}
				}));
				layout.addView(button);

				var entitySkinMenu = new android.widget.PopupWindow(layout, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				entitySkinMenu.setContentView(layout);
				entitySkinMenu.setFocusable(true);
				entitySkinMenu.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight());
				entitySkinMenu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				entitySkinMenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				chat(error);
			}
		}
	}));
}

function otherM() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						plugins.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				if (ModPE.readData("Installed.ColorBtns.js") == "TRUE") {
					button.setText("Uninstall Color Buttons");
				} else {
					button.setText("Install Color Buttons");
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						if (ModPE.readData("Installed.ColorBtns.js") == "TRUE") {
							colorButtonsUninstall()
						} else {
							colorButtonsInstall()
						}
					}
				}));
				menuLayout.addView(button);

				plugins = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				plugins.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				plugins.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function colorButtonsInstall() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			var alert = new android.app.AlertDialog.Builder(ctx);
			alert.setTitle("Install Plugin");

			var scroll = new android.widget.ScrollView(ctx);
			var layout = new android.widget.LinearLayout(ctx);
			layout.setOrientation(1);

			var note = new android.widget.TextView(ctx);
			note.setText("Are you sure you want to install a plugin to color buttons in your favour.");
			note.setTextColor(android.graphics.Color.WHITE);
			note.setTextSize(20);

			var embl = "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";
			var image = new android.widget.ImageView(ctx);
			var edmd = android.util.Base64.decode(embl, 0);
			image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));

			var params = new android.view.ViewGroup.LayoutParams(-2, -2);

			layout.addView(note, params);
			layout.addView(image, params);
			alert.setView(layout);

			alert.setPositiveButton("Install", new android.content.DialogInterface.OnClickListener() {
				onClick: function(par1) {
					ModPE.saveData("Installed.ColorBtns.js", "TRUE");
					if (plugins != null) {
						plugins.dismiss();
						otherM();
					}
				}
			});

			alert.setNegativeButton("Never Mind", new android.content.DialogInterface.OnClickListener() {
				onClick: function(viewarg) {}
			});

			var dialog = alert.create();
			dialog.show();
		}
	}));
}

function colorButtonsUninstall() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			var alert = new android.app.AlertDialog.Builder(ctx);
			alert.setTitle("Uninstall Plugin");

			var scroll = new android.widget.ScrollView(ctx);
			var layout = new android.widget.LinearLayout(ctx);
			layout.setOrientation(1);

			var note = new android.widget.TextView(ctx);
			note.setText("Are you sure you want to uninstall a plugin to color buttons in your favour.");
			note.setTextColor(android.graphics.Color.WHITE);
			note.setTextSize(20);

			var embl = "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zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfTMvk5duVPtnSd/My+SlG9X+WdI38zJ56Ua1f5b0zbxMXrpR7Z8lfbMiq5der5bPnr7Zku1L71abZ1XfLMobIL1YrZ1tfbMur4L0SrVwvkfffJ+8GdLvrPbMN+ubHyDvivQbqvXyU/TND5MXSPpJ1Ur5ifrmZ8u7Je1WO+QX6JvfJi+f9OdVG+NX6ptX5DWV/mk1G97RNwfktdaN6l+fK/oGX/9fVf3bQfQN/6Z8Y/TnVf+H4T/RN3yTfNh+c/VfBN+pbwAe0DcAD+gbgAf0DcAD+gbgAX0D8IC+AXhA3wA8oG8AHtA3AA/oG4AH9A3AA/oG4AF9A/CAvgF4QN8APKBvAB7QNwAP6BuAB/QNwAP6BuABfQPwgL4BeEDfADygbwAe0DcAD+gbgAf0DcAD+gbgAX0D8IC+AXhA3wA8oG8AHtA3AA/oG4AH9A3AA/oG4AF9A/CAvgF4QN8APKBvAB7QNwAP6BuAB/QNwAP6BuABfQPwgL4BeEDfADygbwAe0DcAD+gbgAf0DcAD+gbgAX0D8IC+AXhA3wA8oG8AHtA3AA/oG4AH9A3AA/oG4AF9A/CAvgF4QN8APKBvAH67v/zlfwG6ASH8np3MfQAAAABJRU5ErkJggg==";
			var image = new android.widget.ImageView(ctx);
			var edmd = android.util.Base64.decode(embl, 0);
			image.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(edmd, 0, edmd.length));

			var params = new android.view.ViewGroup.LayoutParams(-2, -2);

			layout.addView(note, params);
			layout.addView(image, params);
			alert.setView(layout);

			alert.setPositiveButton("Uninstall", new android.content.DialogInterface.OnClickListener() {
				onClick: function(par1) {
					ModPE.saveData("Installed.ColorBtns.js", "FALSE");
					if (plugins != null) {
						plugins.dismiss();
						otherM();
					}
				}
			});

			alert.setNegativeButton("Never Mind", new android.content.DialogInterface.OnClickListener() {
				onClick: function(viewarg) {}
			});

			var dialog = alert.create();
			dialog.show();
		}
	}));
}

function toColors() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Core By Teh Picix");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setGravity(android.view.Gravity.CENTER);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colors.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Functions");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorFunctions();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Morphs");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorMorphs();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("More Menus");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorMenus();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Texts");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorTexts();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Other");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorOther();
					}
				}));
				menuLayout.addView(button);

				colors = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				colors.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				colors.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}


function modTick() {
	var file1 = new java.io.File(android.os.Environment.getExternalStorageDirectory().getAbsolutePath() + "/Core/Assets/Activated.txt");
	if (file1.exists()) {
		ModPE.saveData("AlreadyActivated", "pro");
	}
}

function colorFunctions() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Current Functions Color");
				if (ModPE.readData("color.Functions") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Functions") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Functions") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Functions") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Functions") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Functions") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Functions") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Functions") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Functions") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Functions") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Functions") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Functions") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Functions") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Default Functions Color")
				button.setTextColor(android.graphics.Color.RED);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Red");
				button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "dark_red");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Red");
				button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "red");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Orange");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "orange");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Yellow");
				button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "yellow");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Lime Green");
				button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "lime");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Green");
				button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "green");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Cyan");
				button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "cyan");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Aqua");
				button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "aqua");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Blue");
				button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "blue");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Blue");
				button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "dark_blue");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Purple");
				button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "purple");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Pink");
				button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "pink");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("White");
				button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Functions", "white");
						colorsFunction.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				colorsFunction = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				colorsFunction.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				colorsFunction.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function colorOther() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Current Other Color");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Default Other Color")
				button.setTextColor(android.graphics.Color.WHITE);
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Red");
				button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "dark_red");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Red");
				button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "red");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Orange");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "orange");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Yellow");
				button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "yellow");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Lime Green");
				button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "lime");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Green");
				button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "green");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Cyan");
				button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "cyan");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Aqua");
				button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "aqua");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Blue");
				button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "blue");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Blue");
				button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "dark_blue");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Purple");
				button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "purple");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Pink");
				button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "pink");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("White");
				button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Other", "white");
						colorsOther.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				colorsOther = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				colorsOther.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				colorsOther.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}


function colorMorphs() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Current Morphs Color");
				if (ModPE.readData("color.Morphs") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Morphs") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Morphs") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Morphs") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Morphs") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Morphs") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Morphs") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Morphs") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Morphs") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Morphs") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Morphs") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Morphs") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Morphs") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Default Morphs Color")
				button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Red");
				button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "dark_red");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Red");
				button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "red");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Orange");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "orange");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Yellow");
				button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "yellow");
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Lime Green");
				button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "lime");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Green");
				button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "green");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Cyan");
				button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "cyan");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Aqua");
				button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "aqua");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Blue");
				button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "blue");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Blue");
				button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "dark_blue");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Purple");
				button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "purple");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Pink");
				button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "pink");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("White");
				button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Morphs", "white");
						colors.dismiss();
						toColors();
						colorsMorphs.dismiss();
					}
				}));
				menuLayout.addView(button);

				colorsMorphs = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				colorsMorphs.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				colorsMorphs.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function colorMenus() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Current Menus Color");
				if (ModPE.readData("color.Menus") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Menus") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Menus") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Menus") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Menus") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Menus") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Menus") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Menus") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Menus") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Menus") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Menus") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Menus") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Menus") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Default Menus Color")
				button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Red");
				button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "dark_red");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Red");
				button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "red");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Orange");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "orange");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Yellow");
				button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "yellow");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Lime Green");
				button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "lime");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Green");
				button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "green");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Cyan");
				button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "cyan");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Aqua");
				button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "aqua");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Blue");
				button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "blue");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Blue");
				button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "dark_blue");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Purple");
				button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "purple");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Pink");
				button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "pink");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("White");
				button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Menus", "white");
						colorsMenus.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				colorsMenus = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				colorsMenus.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				colorsMenus.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}

function colorTexts() {
	var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {
				var menuLayout = new android.widget.LinearLayout(ctx);
				var menuScroll = new android.widget.ScrollView(ctx);
				var menuLayout1 = new android.widget.LinearLayout(ctx);
				menuLayout.setOrientation(1);
				menuLayout1.setOrientation(1);

				menuScroll.addView(menuLayout);
				menuLayout1.addView(menuScroll);

				var button = new android.widget.Button(ctx);
				button.setText("Back");
				if (ModPE.readData("color.Other") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Other") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Other") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Other") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Other") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Other") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Other") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Other") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Other") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Other") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Other") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Other") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Other") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Current Texts Color");
				if (ModPE.readData("color.Texts") == "dark_red") {
					button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				}
				if (ModPE.readData("color.Texts") == "red") {
					button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				}
				if (ModPE.readData("color.Texts") == "orange") {
					button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				}
				if (ModPE.readData("color.Texts") == "yellow") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				}
				if (ModPE.readData("color.Texts") == "lime") {
					button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				}
				if (ModPE.readData("color.Texts") == "green") {
					button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				}
				if (ModPE.readData("color.Texts") == "aqua") {
					button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				}
				if (ModPE.readData("color.Texts") == "cyan") {
					button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				}
				if (ModPE.readData("color.Texts") == "blue") {
					button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				}
				if (ModPE.readData("color.Texts") == "dark_blue") {
					button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				}
				if (ModPE.readData("color.Texts") == "purple") {
					button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				}
				if (ModPE.readData("color.Texts") == "pink") {
					button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				}
				if (ModPE.readData("color.Texts") == "white") {
					button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				}
				menuLayout.addView(button);

				var button = new android.widget.TextView(ctx);
				button.setTextSize(18);
				button.setText("Default Texts Color")
				button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Red");
				button.setTextColor(android.graphics.Color.parseColor("#AA0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "dark_red");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Red");
				button.setTextColor(android.graphics.Color.parseColor("#FF0000"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "red");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Orange");
				button.setTextColor(android.graphics.Color.parseColor("#FFAA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "orange");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Yellow");
				button.setTextColor(android.graphics.Color.parseColor("#FFFF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "yellow");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Lime Green");
				button.setTextColor(android.graphics.Color.parseColor("#00FF00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "lime");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Green");
				button.setTextColor(android.graphics.Color.parseColor("#00AA00"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "green");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Cyan");
				button.setTextColor(android.graphics.Color.parseColor("#00AAAA"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "cyan");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Aqua");
				button.setTextColor(android.graphics.Color.parseColor("#00FFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "aqua");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Blue");
				button.setTextColor(android.graphics.Color.parseColor("#3333FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "blue");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Dark Blue");
				button.setTextColor(android.graphics.Color.parseColor("#0000FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "dark_blue");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Purple");
				button.setTextColor(android.graphics.Color.parseColor("#AA00FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "purple");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("Pink");
				button.setTextColor(android.graphics.Color.parseColor("#FF44FF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "pink");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				var button = new android.widget.Button(ctx);
				button.setText("White");
				button.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
				button.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						ModPE.saveData("color.Texts", "white");
						colorsTexts.dismiss();
						colors.dismiss();
						toColors();
					}
				}));
				menuLayout.addView(button);

				colorsTexts = new android.widget.PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth() / 3, ctx.getWindowManager().getDefaultDisplay().getHeight());
				colorsTexts.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.BLACK));
				colorsTexts.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0);
			} catch (error) {
				print("An error occured: " + error);
			}
		}
	}));
}